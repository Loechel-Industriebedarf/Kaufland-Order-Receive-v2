<?php
require_once 'settings.php';

$directory = '../PDF-OrderNumber-Converter/pdf/';


//Cycle throught files
$filepaths = array();
$filenames = array();
$ordernumbers = array();
foreach (scandir($directory) as $file) {
	if ($file !== '.' && $file !== '..') {
		$filepaths[] = $directory . $file;
		$filenames[] = $file;
		$ordernumbers[] = str_replace('.pdf', '', $file);
	}
}	

for($i = 0; $i < sizeof($filepaths); $i++){
	try{				
		//Upload to kaufland
		$result = uploadInvoice($ordernumbers[$i], $filepaths[$i], $clientKey, $secretKey);
		
		var_dump($result);
		echo "\r\n";
	} catch (\Exception $e) {
		echo "[!] Unable to upload " . $filenames[$i] . " to order number " . $ordernumbers[$i] . "\r\n";
		continue;
	}
	
	try{
		//Delete file after upload
		$resultArr = json_decode($result);
		
		if(isset($resultArr->data->id_invoice)){
			unlink($filepaths[$i]);
		
			echo "Added invoice " . $filenames[$i] . " to order number " . $ordernumbers[$i] . "\r\n\r\n";
		}
		else{
			throw new Exception("Invoice couldn't be added...");
		}
		
	} catch (\Exception $e) {
		echo "[!] Added invoice " . $filenames[$i] . " to order number " . $ordernumbers[$i] . ", but couldn't delete invoice pdf!\r\n\r\n";
	}
}





function uploadInvoice($orderNumber, $filePath, $clientKey, $secretKey){
	$userAgent = "LÃ¶chel-Industriebedarf-Invoice-Upload";
	$timestamp = time();
	$uri = 'https://sellerapi.kaufland.com/v2/order-invoices/' . $orderNumber;

	$base64 = chunk_split(base64_encode(file_get_contents($filePath)));

	$obj = array(
		"original_name" => "invoice_".$orderNumber.".pdf", 
		"mime_type" => "application/pdf", 
		"data" => $base64
	);
	
	$payload = json_encode($obj);
		
	// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	$ch = curl_init();

	curl_setopt($ch, CURLOPT_URL, $uri);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $payload);

	$headers = array();
	$headers[] = 'Content-Type: application/json';
	$headers[] = 'Accept: application/json';
	$headers[] = 'Shop-Client-Key: ' . $clientKey;
	$headers[] = 'Shop-Signature: ' . signRequest('POST', $uri, $payload, $timestamp, $secretKey);
	$headers[] = 'Shop-Timestamp: ' . $timestamp;
	$headers[] = 'User-Agent: ' . $userAgent;
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

	$result = curl_exec($ch);
	if (curl_errno($ch)) {
		echo 'Error:' . curl_error($ch);
	}
	curl_close($ch);
	
	return $result;
}





function signRequest($method, $uri, $body, $timestamp, $secretKey)
{
	$string = implode("\n", [
		$method,
		$uri,
		$body,
		$timestamp,
	]);

	return hash_hmac('sha256', $string, $secretKey);
}